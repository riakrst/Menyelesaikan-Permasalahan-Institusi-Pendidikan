# -*- coding: utf-8 -*-
"""Submission 2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wYohve42mX_Aj-fc4EhmM3o0u5ue8cLO

# Proyek Akhir: Menyelesaikan Permasalahan Perusahaan Edutech

- Nama: Ria Kristi
- Email: riakristibasri@gmail.com
- Id Dicoding: riakrst

# Persiapan

## Menyiapkan library yang dibutuhkan
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from xgboost import XGBClassifier
from sklearn.metrics import classification_report, confusion_matrix
from imblearn.over_sampling import SMOTE
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score


import warnings
warnings.filterwarnings('ignore')

"""## Menyiapkan data yang akan digunakan
### Data Loading

Dataset yang digunakan datapat diakses pada tautan berikut : https://github.com/dicodingacademy/dicoding_dataset/blob/main/students_performance/data.csv
"""

df = pd.read_csv('students_performance.csv', delimiter=';')
df.head()

"""# Data Understanding

# Students' Performance

A dataset created from a higher education institution (acquired from several disjoint databases) related to students enrolled in different undergraduate degrees, such as agronomy, design, education, nursing, journalism, management, social service, and technologies. The dataset includes information known at the time of student enrollment (academic path, demographics, and social-economic factors) and the students' academic performance at the end of the first and second semesters. The data is used to build classification models to predict students' dropout and academic sucess.

| Column name | Description |
| --- | --- |
|Marital status | The marital status of the student. (Categorical) 1 – single 2 – married 3 – widower 4 – divorced 5 – facto union 6 – legally separated |
| Application mode | The method of application used by the student. (Categorical) 1 - 1st phase - general contingent 2 - Ordinance No. 612/93 5 - 1st phase - special contingent (Azores Island) 7 - Holders of other higher courses 10 - Ordinance No. 854-B/99 15 - International student (bachelor) 16 - 1st phase - special contingent (Madeira Island) 17 - 2nd phase - general contingent 18 - 3rd phase - general contingent 26 - Ordinance No. 533-A/99, item b2) (Different Plan) 27 - Ordinance No. 533-A/99, item b3 (Other Institution) 39 - Over 23 years old 42 - Transfer 43 - Change of course 44 - Technological specialization diploma holders 51 - Change of institution/course 53 - Short cycle diploma holders 57 - Change of institution/course (International)|
|Application order | The order in which the student applied. (Numerical) Application order (between 0 - first choice; and 9 last choice) |
|Course | The course taken by the student. (Categorical) 33 - Biofuel Production Technologies 171 - Animation and Multimedia Design 8014 - Social Service (evening attendance) 9003 - Agronomy 9070 - Communication Design 9085 - Veterinary Nursing 9119 - Informatics Engineering 9130 - Equinculture 9147 - Management 9238 - Social Service 9254 - Tourism 9500 - Nursing 9556 - Oral Hygiene 9670 - Advertising and Marketing Management 9773 - Journalism and Communication 9853 - Basic Education 9991 - Management (evening attendance)|
|Daytime/evening attendance | Whether the student attends classes during the day or in the evening. (Categorical) 1 – daytime 0 - evening |
|Previous qualification| The qualification obtained by the student before enrolling in higher education. (Categorical) 1 - Secondary education 2 - Higher education - bachelor's degree 3 - Higher education - degree 4 - Higher education - master's 5 - Higher education - doctorate 6 - Frequency of higher education 9 - 12th year of schooling - not completed 10 - 11th year of schooling - not completed 12 - Other - 11th year of schooling 14 - 10th year of schooling 15 - 10th year of schooling - not completed 19 - Basic education 3rd cycle (9th/10th/11th year) or equiv. 38 - Basic education 2nd cycle (6th/7th/8th year) or equiv. 39 - Technological specialization course 40 - Higher education - degree (1st cycle) 42 - Professional higher technical course 43 - Higher education - master (2nd cycle) |
|Previous qualification (grade) | Grade of previous qualification (between 0 and 200) |
| Nacionality | The nationality of the student. (Categorical) 1 - Portuguese; 2 - German; 6 - Spanish; 11 - Italian; 13 - Dutch; 14 - English; 17 - Lithuanian; 21 - Angolan; 22 - Cape Verdean; 24 - Guinean; 25 - Mozambican; 26 - Santomean; 32 - Turkish; 41 - Brazilian; 62 - Romanian; 100 - Moldova (Republic of); 101 - Mexican; 103 - Ukrainian; 105 - Russian; 108 - Cuban; 109 - Colombian|
|Mother's qualification | The qualification of the student's mother. (Categorical) 1 - Secondary Education - 12th Year of Schooling or Eq. 2 - Higher Education - Bachelor's Degree 3 - Higher Education - Degree 4 - Higher Education - Master's 5 - Higher Education - Doctorate 6 - Frequency of Higher Education 9 - 12th Year of Schooling - Not Completed 10 - 11th Year of Schooling - Not Completed 11 - 7th Year (Old) 12 - Other - 11th Year of Schooling 14 - 10th Year of Schooling 18 - General commerce course 19 - Basic Education 3rd Cycle (9th/10th/11th Year) or Equiv. 22 - Technical-professional course 26 - 7th year of schooling 27 - 2nd cycle of the general high school course 29 - 9th Year of Schooling - Not Completed 30 - 8th year of schooling 34 - Unknown 35 - Can't read or write 36 - Can read without having a 4th year of schooling 37 - Basic education 1st cycle (4th/5th year) or equiv. 38 - Basic Education 2nd Cycle (6th/7th/8th Year) or Equiv. 39 - Technological specialization course 40 - Higher education - degree (1st cycle) 41 - Specialized higher studies course 42 - Professional higher technical course 43 - Higher Education - Master (2nd cycle) 44 - Higher Education - Doctorate (3rd cycle)|
|Father's qualification | The qualification of the student's father. (Categorical) 1 - Secondary Education - 12th Year of Schooling or Eq. 2 - Higher Education - Bachelor's Degree 3 - Higher Education - Degree 4 - Higher Education - Master's 5 - Higher Education - Doctorate 6 - Frequency of Higher Education 9 - 12th Year of Schooling - Not Completed 10 - 11th Year of Schooling - Not Completed 11 - 7th Year (Old) 12 - Other - 11th Year of Schooling 13 - 2nd year complementary high school course 14 - 10th Year of Schooling 18 - General commerce course 19 - Basic Education 3rd Cycle (9th/10th/11th Year) or Equiv. 20 - Complementary High School Course 22 - Technical-professional course 25 - Complementary High School Course - not concluded 26 - 7th year of schooling 27 - 2nd cycle of the general high school course 29 - 9th Year of Schooling - Not Completed 30 - 8th year of schooling 31 - General Course of Administration and Commerce 33 - Supplementary Accounting and Administration 34 - Unknown 35 - Can't read or write 36 - Can read without having a 4th year of schooling 37 - Basic education 1st cycle (4th/5th year) or equiv. 38 - Basic Education 2nd Cycle (6th/7th/8th Year) or Equiv. 39 - Technological specialization course 40 - Higher education - degree (1st cycle) 41 - Specialized higher studies course 42 - Professional higher technical course 43 - Higher Education - Master (2nd cycle) 44 - Higher Education - Doctorate (3rd cycle) |
| Mother's occupation | The occupation of the student's mother. (Categorical) 0 - Student 1 - Representatives of the Legislative Power and Executive Bodies, Directors, Directors and Executive Managers 2 - Specialists in Intellectual and Scientific Activities 3 - Intermediate Level Technicians and Professions 4 - Administrative staff 5 - Personal Services, Security and Safety Workers and Sellers 6 - Farmers and Skilled Workers in Agriculture, Fisheries and Forestry 7 - Skilled Workers in Industry, Construction and Craftsmen 8 - Installation and Machine Operators and Assembly Workers 9 - Unskilled Workers 10 - Armed Forces Professions 90 - Other Situation 99 - (blank) 122 - Health professionals 123 - teachers 125 - Specialists in information and communication technologies (ICT) 131 - Intermediate level science and engineering technicians and professions 132 - Technicians and professionals, of intermediate level of health 134 - Intermediate level technicians from legal, social, sports, cultural and similar services 141 - Office workers, secretaries in general and data processing operators 143 - Data, accounting, statistical, financial services and registry-related operators 144 - Other administrative support staff 151 - personal service workers 152 - sellers 153 - Personal care workers and the like 171 - Skilled construction workers and the like, except electricians 173 - Skilled workers in printing, precision instrument manufacturing, jewelers, artisans and the like 175 - Workers in food processing, woodworking, clothing and other industries and crafts 191 - cleaning workers 192 - Unskilled workers in agriculture, animal production, fisheries and forestry 193 - Unskilled workers in extractive industry, construction, manufacturing and transport 194 - Meal preparation assistants |
| Father's occupation | The occupation of the student's father. (Categorical) 0 - Student 1 - Representatives of the Legislative Power and Executive Bodies, Directors, Directors and Executive Managers 2 - Specialists in Intellectual and Scientific Activities 3 - Intermediate Level Technicians and Professions 4 - Administrative staff 5 - Personal Services, Security and Safety Workers and Sellers 6 - Farmers and Skilled Workers in Agriculture, Fisheries and Forestry 7 - Skilled Workers in Industry, Construction and Craftsmen 8 - Installation and Machine Operators and Assembly Workers 9 - Unskilled Workers 10 - Armed Forces Professions 90 - Other Situation 99 - (blank) 101 - Armed Forces Officers 102 - Armed Forces Sergeants 103 - Other Armed Forces personnel 112 - Directors of administrative and commercial services 114 - Hotel, catering, trade and other services directors 121 - Specialists in the physical sciences, mathematics, engineering and related techniques 122 - Health professionals 123 - teachers 124 - Specialists in finance, accounting, administrative organization, public and commercial relations 131 - Intermediate level science and engineering technicians and professions 132 - Technicians and professionals, of intermediate level of health 134 - Intermediate level technicians from legal, social, sports, cultural and similar services 135 - Information and communication technology technicians 141 - Office workers, secretaries in general and data processing operators 143 - Data, accounting, statistical, financial services and registry-related operators 144 - Other administrative support staff 151 - personal service workers 152 - sellers 153 - Personal care workers and the like 154 - Protection and security services personnel 161 - Market-oriented farmers and skilled agricultural and animal production workers 163 - Farmers, livestock keepers, fishermen, hunters and gatherers, subsistence 171 - Skilled construction workers and the like, except electricians 172 - Skilled workers in metallurgy, metalworking and similar 174 - Skilled workers in electricity and electronics 175 - Workers in food processing, woodworking, clothing and other industries and crafts 181 - Fixed plant and machine operators 182 - assembly workers 183 - Vehicle drivers and mobile equipment operators 192 - Unskilled workers in agriculture, animal production, fisheries and forestry 193 - Unskilled workers in extractive industry, construction, manufacturing and transport 194 - Meal preparation assistants 195 - Street vendors (except food) and street service providers |
| Admission grade | Admission grade (between 0 and 200) |
| Displaced | Whether the student is a displaced person. (Categorical) 	1 – yes 0 – no |
| Educational special needs | Whether the student has any special educational needs. (Categorical) 1 – yes 0 – no |
|Debtor | Whether the student is a debtor. (Categorical) 1 – yes 0 – no|
|Tuition fees up to date | Whether the student's tuition fees are up to date. (Categorical) 1 – yes 0 – no|
|Gender | The gender of the student. (Categorical) 1 – male 0 – female |
|Scholarship holder | Whether the student is a scholarship holder. (Categorical) 1 – yes 0 – no |
|Age at enrollment | The age of the student at the time of enrollment. (Numerical)|
|International | Whether the student is an international student. (Categorical) 1 – yes 0 – no|
|Curricular units 1st sem (credited) | The number of curricular units credited by the student in the first semester. (Numerical) |
| Curricular units 1st sem (enrolled) | The number of curricular units enrolled by the student in the first semester. (Numerical) |
| Curricular units 1st sem (evaluations) | The number of curricular units evaluated by the student in the first semester. (Numerical) |
| Curricular units 1st sem (approved) | The number of curricular units approved by the student in the first semester. (Numerical) |

## Acknowledgements
Realinho,Valentim, Vieira Martins,Mónica, Machado,Jorge, and Baptista,Luís. (2021). Predict students' dropout and academic success. UCI Machine Learning Repository. https://doi.org/10.24432/C5MC89.

"""

print(f"Jumlah baris dan kolom: {df.shape}")
df.info()

# ringkasan statistik deskriptif dataset
df.describe()

"""## Exploratory Data Analysis

#### Menampilkan korelasi antar fitur
"""

# Ambil fitur numerik
num_features = df.select_dtypes(include=['int64', 'float64'])

# Hitung korelasi
correlation = num_features.corr()

# Visualisasi korelasi
plt.figure(figsize=(25, 20))
sns.heatmap(correlation, cmap='coolwarm', annot=True)
plt.title('Korelasi Antar Fitur Numerik')
plt.show()

"""### Menampilkan histogram untuk semua kolom numerik"""

df.hist(figsize=(20, 15), bins=30, edgecolor='black')
plt.tight_layout(pad=3.0)
plt.show()

"""### Distribusi Data

### Menampilkan Distribusi Status
"""

sns.countplot(x='Status', data=df)
plt.title('Distribusi Status')
plt.show()

"""### Nilai Masuk (Admission Grade)"""

sns.histplot(data=df, x='Admission_grade', hue='Status', kde=True, bins=30)
plt.title('Distribusi Admission Grade terhadap Status')
plt.show()

"""### Distribusi Jumlah Evaluasi  Mata Kuliah Semester 1 Terhadap Status Mahasiswa
Indikasi bahwa mahasiswa aktif mengikuti dan dinilai dalam mata kuliah tersebut.
"""

sns.histplot(data=df, x='Curricular_units_1st_sem_evaluations', hue='Status', kde=True)
plt.title('Jumlah Evaluasi Mata Kuliah Semester 1 terhadap Status')
plt.show()

"""### Distribusi Kelulusan Mata Kuliah Semester 1 terhadap Status Mahasiswa"""

sns.histplot(data=df, x='Curricular_units_1st_sem_approved', hue='Status', kde=True)
plt.title('Jumlah Kelulusan Mata Kuliah Semester 1 terhadap Status')
plt.show()

"""### Distribusi Fitur Kategorikal dengan Status
### Gender vs Status
"""

sns.countplot(data=df, x='Gender', hue='Status')
plt.title('Distribusi Gender Berdasarkan Status')
plt.xticks(ticks=[0, 1], labels=['Perempuan', 'Laki-laki'])
plt.show()

"""### Course vs Status"""

course_labels = {
    33: 'Biofuel Production Technologies',
    171: 'Animation and Multimedia Design',
    8014: 'Social Service (evening attendance)',
    9003: 'Agronomy',
    9070: 'Communication Design',
    9085: 'Veterinary Nursing',
    9119: 'Informatics Engineering',
    9130: 'Equinculture',
    9147: 'Management',
    9238: 'Social Service',
    9254: 'Tourism',
    9500: 'Nursing',
    9556: 'Oral Hygiene',
    9670: 'Advertising and Marketing Management',
    9773: 'Journalism and Communication',
    9853: 'Basic Education',
    9991: 'Management (evening attendance)',
}

# Ganti angka di kolom Course dengan nama jurusan
df['Course_Label'] = df['Course'].map(course_labels)

plt.figure(figsize=(14, 6))
sns.countplot(data=df, x='Course_Label', hue='Status',
              order=df['Course_Label'].value_counts().index)

plt.title('Distribusi Mahasiswa per Jurusan berdasarkan Status')
plt.xlabel('Nama Jurusan')
plt.ylabel('Jumlah Mahasiswa')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

"""###  Scholarship Holder vs Status"""

sns.countplot(data=df, x='Scholarship_holder', hue='Status')
plt.title('Pengaruh Beasiswa berdasarkan Status')
plt.xticks(ticks=[0, 1], labels=['no', 'yes'])
plt.show()

"""### Status Mahasiswa vs Umur"""

sns.boxplot(data=df, x='Status', y='Age_at_enrollment')
plt.title('Usia Saat Mendaftar terhadap Status')
plt.show()

# Mengecek dataset menggunakan isnull().sum()
df.isnull().sum()

"""- Tidak ditemukan missing values pada data"""

# Mengecek dataset menggunakan duplicated().sum()
df.duplicated().sum()

"""- Tidak ditemukan data duplicate

### Cek Outlier Semua Kolom Numerik
"""

numeric_cols = df.select_dtypes(include=['int64', 'float64'])

def detect_outliers_iqr(data, column):
    Q1 = data[column].quantile(0.25)
    Q3 = data[column].quantile(0.75)
    IQR = Q3 - Q1
    lower = Q1 - 1.5 * IQR
    upper = Q3 + 1.5 * IQR
    outlier_mask = (data[column] < lower) | (data[column] > upper)
    return outlier_mask.sum(), lower, upper

# Tampilkan jumlah outlier dan ambang batas tiap kolom numerik
print("Jumlah Outlier dan Ambang Batas (IQR Method):\n")
for col in numeric_cols:
    count, low, high = detect_outliers_iqr(df, col)
    print(f"{col:<40} → {count:>5} outliers | batas: [{low:.2f}, {high:.2f}]")

"""- Analisis outlier menggunakan metode IQR menunjukkan bahwa beberapa fitur memiliki nilai yang terdeteksi sebagai outlier, terutama pada fitur kategorikal numerik dan fitur dengan distribusi tidak seimbang. Namun, sebagian besar nilai masih tergolong valid secara konteks. Karena model XGBoost cukup robust terhadap outlier, maka tidak dilakukan penghapusan data.

# Data Preparation / Preprocessing
"""

# Salin data
data = df.copy()

# Drop the non-numeric 'Course_Label' column
data = data.drop(columns=['Course_Label'])

"""### Encoding fitur target"""

# Konversi status menjadi biner: Dropout: 1 (positif) Not Dropout (Enrolled + Graduate): 0 (negatif)
data['Status_num'] = data['Status'].apply(lambda x: 1 if x.lower() == 'dropout' else 0)

# Cek hasil encoding
print(data['Status'].value_counts())
print(data['Status_num'].value_counts())

"""## Pisahkan fitur dan target"""

X = data.drop(columns=['Status', 'Status_num'])  # Semua kolom fitur
y = data['Status_num']

"""### Feature scaling"""

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

"""### Train-test split"""

# Terapkan SMOTE untuk menangani class imbalance
smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X_scaled, y)

print(f"Sebelum SMOTE: {y.value_counts().to_dict()}")
print(f"Setelah SMOTE: {pd.Series(y_resampled).value_counts().to_dict()}")

# Split train-test
X_train, X_test, y_train, y_test = train_test_split(
    X_resampled, y_resampled,
    test_size=0.2,
    random_state=42,
    stratify=y_resampled
)

print(f"Ukuran data training: {X_train.shape}, Ukuran data testing: {X_test.shape}")

"""# Modeling"""

# Inisialisasi model
model_xgb = XGBClassifier(
    objective='binary:logistic',
    eval_metric='logloss',
    use_label_encoder=False,
    random_state=42
)

# Training model
model_xgb.fit(X_train, y_train)

# Prediksi
y_pred = model_xgb.predict(X_test)

"""# Evaluation"""

# Evaluasi model
print("Classification Report:")
print(classification_report(y_test, y_pred))

print("\nConfusion Matrix:")
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=["Not Dropout", "Dropout"], yticklabels=["Not Dropout", "Dropout"])
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix XGBoost')
plt.show()

# Akurasi
acc = accuracy_score(y_test, y_pred)
print(f"Akurasi Model: {acc:.4f}")

"""- Model XGBoost berhasil mencapai akurasi 92% dalam memprediksi status dropout mahasiswa. Nilai precision, recall, dan f1-score untuk kedua kelas (Dropout dan Not Dropout) sama tinggi, yaitu 0.92, yang menunjukkan bahwa model seimbang dalam mendeteksi mahasiswa yang dropout maupun yang tidak. Confusion matrix menunjukkan jumlah kesalahan prediksi yang relatif kecil (48 dan 50 dari total 1202 data), menandakan performa model sangat baik dan layak digunakan dalam sistem deteksi dini dropout."""

# Ambil feature importance dari model XGBoost
importances_xgb = model_xgb.feature_importances_
features = X.columns

# Buat DataFrame dan urutkan berdasarkan nilai importance
xgb_feat_df = pd.DataFrame({
    "Feature": features,
    "Importance": importances_xgb
}).sort_values(by="Importance", ascending=False)

# Visualisasikan 10 fitur teratas
plt.figure(figsize=(10,6))
sns.barplot(data=xgb_feat_df.head(10), x="Importance", y="Feature")
plt.title("Top 10 Feature Importance - XGBoost")
plt.tight_layout()
plt.show()

"""**Insight Feature Importance XGBoost:**

Berdasarkan hasil feature importance, faktor yang paling berpengaruh dalam memprediksi dropout mahasiswa adalah:

- Curricular_units_2nd_sem_approved (jumlah mata kuliah yang disetujui di semester 2): fitur paling menentukan, menunjukkan bahwa keberhasilan akademik di semester 2 sangat krusial.
- Tuition_fees_up_to_date (status pembayaran UKT): mahasiswa yang tidak membayar tepat waktu memiliki kecenderungan lebih tinggi untuk dropout.
- Fitur akademik lainnya seperti jumlah mata kuliah yang diambil/diikuti di semester 1 dan 2 juga berperan penting.
- Fitur demografis seperti Scholarship_holder dan Gender juga memberikan kontribusi meskipun tidak sebesar performa akademik.

**Kesimpulan:**
Performa akademik (khususnya semester 2) dan kepatuhan terhadap kewajiban administratif seperti pembayaran UKT adalah indikator utama risiko dropout. Insight ini dapat digunakan sebagai dasar intervensi dini.

# Save Model
"""

import joblib

# Simpan model XGB
joblib.dump(model_xgb, 'xgboost_dropout_model.joblib')

# Simpan scaler
joblib.dump(scaler, 'scaler.joblib')

# Simpan urutan kolom fitur
feature_order = list(X.columns)  # X adalah DataFrame sebelum scaling
joblib.dump(feature_order, 'feature_order.joblib')

print("Model, scaler, dan feature order berhasil disimpan.")